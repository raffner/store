# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    ###
    #L'encodage du mot de passe (par défaut, du texte en dur = "plaintext
    #L'encodage se fera au niveau de l'entité du jeweler
    ###
    encoders:
       Store\BackendBundle\Entity\Jeweler:
              #algorithm:   sha1
              #iterations: 1
              #encode_as_base64: false
             algorithm:   sha512 #Algorithme sha512
             iterations: 10 #nb de fois que l'algo tourne pour générer le mot de passe
             encode_as_base64: true #base 64
    ###
    # Role des utilisateurs qui vont se connecter à l'authentification
    # Les utilisateurs seront de role Jeweler
    ###
    role_hierarchy:
        ROLE_EDITOR:        ROLE_EDITOR
        ROLE_COMMERCIAL:    ROLE_COMMERCIAL
        ROLE_JEWELER:       [ROLE_JEWELER, ROLE_EDITOR, ROLE_COMMERCIAL ]
        ROLE_USER:          [ROLE_USER, ROLE_JEWELER]
        ROLE_ADMIN:         [ROLE_ADMIN, ROLE_USER]
    ###
    # Configurer les fournisseurs d'authentification. Par défaut en mémoire : définit en dur
    # J'ai créé un utilisateur avec l'entité jeweller. C'est l'entité qui sert de provider
    ###
    providers:
        store_backend:
          entity: { class: StoreBackendBundle:Jeweler }
        #in_memory:
        #memory:
        # users:
        # admin: { password: 74913f5cd5f61ec0bcfdb775414c2fb3d161b620, roles: [ 'ROLE_JEWELER' ] }

    ###
    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    ###
    firewalls:
        ###
        # On va créer des zones de sécurité d'authentification (ex : on dira que /administration sera une zone sécurisée
        ###

        ###
        # première zone sécurisée du back-office : le pare-feu porte le nom du namespace et de la route
        ###
        store_backend:
            pattern:    ^/administration #l'URI en regex derrière le pare-feu
            form_login:
                check_path: store_backend_security_login_check #Chemin vers la vérif du login
                login_path: store_backend_security_login #Chemin vers la page du login
                target_path_parameter: store_backend_index #chemin vers la redirection
                default_target_path: /administration/dashboard #forcer la main à la redirection
            logout:
                path:   store_backend_security_logout #Chemin vers la déconnexion
                target: /login #page de redirection après déconnexion
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    ###
    # Le rôle jeweler sera lié à notre firewall store_backend : après authentification : suis-je autorisé?
    # Sur la première ligne de l'access control, on fait une restriction d'accès totale de la classe products pour le commercial
    ###
    access_control:
   ### - { path: ^/administration/product, roles: ROLE_COMMERCIAL }
    - { path: ^/administration, roles: [ROLE_JEWELER, ROLE_EDITOR, ROLE_COMMERCIAL] }